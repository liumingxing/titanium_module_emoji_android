/**
 * This file was auto-generated by the Titanium Module SDK helper for Android
 * Appcelerator Titanium Mobile
 * Copyright (c) 2009-2010 by Appcelerator, Inc. All Rights Reserved.
 * Licensed under the terms of the Apache Public License
 * Please see the LICENSE included with this distribution for details.
 *
 */
package com.mamashai.emoji;

import org.appcelerator.kroll.KrollDict;
import org.appcelerator.kroll.KrollProxy;
import org.appcelerator.kroll.annotations.Kroll;
import org.appcelerator.titanium.TiC;
import org.appcelerator.titanium.util.Log;
import org.appcelerator.titanium.util.TiConfig;
import org.appcelerator.titanium.util.TiConvert;
import org.appcelerator.titanium.proxy.TiViewProxy;
import org.appcelerator.titanium.view.TiCompositeLayout;
import org.appcelerator.titanium.view.TiCompositeLayout.LayoutArrangement;
import org.appcelerator.titanium.view.TiUIView;
import org.appcelerator.titanium.TiApplication;
import android.os.Message;
import android.widget.EditText;
import ti.modules.titanium.ui.widget.TiUIText;

import android.app.Activity;


@Kroll.proxy(name = "TextField", creatableInModule=EmojiModule.class, propertyAccessors = {
	TiC.PROPERTY_AUTOCAPITALIZATION,
	TiC.PROPERTY_AUTOCORRECT,
	TiC.PROPERTY_AUTO_LINK,
	TiC.PROPERTY_CLEAR_ON_EDIT,
	TiC.PROPERTY_COLOR,
	TiC.PROPERTY_EDITABLE,
	TiC.PROPERTY_ELLIPSIZE,
	TiC.PROPERTY_ENABLE_RETURN_KEY,
	TiC.PROPERTY_FONT,
	TiC.PROPERTY_HINT_TEXT,
	TiC.PROPERTY_KEYBOARD_TYPE,
	TiC.PROPERTY_MAX_LENGTH,
	TiC.PROPERTY_PASSWORD_MASK,
	TiC.PROPERTY_TEXT_ALIGN,
	TiC.PROPERTY_VALUE,
	TiC.PROPERTY_VERTICAL_ALIGN,
	TiC.PROPERTY_RETURN_KEY_TYPE
})
public class EmojiTextFieldProxy extends TiViewProxy
{
	// Standard Debugging variables
	private static final String LCAT = "TextFieldProxy";
	private static final boolean DBG = TiConfig.LOGD;
	
	private static final int MSG_FIRST_ID = TiViewProxy.MSG_LAST_ID + 1;
	private static final int MSG_SET_SELECTION = MSG_FIRST_ID + 201;
	private static final int MSG_GET_SELECTION = MSG_FIRST_ID + 202;
	
	private int    m_fontsize = 0;

	// Constructor
	public EmojiTextFieldProxy()
	{
		super();
	}

	@Override
	public TiUIView createView(Activity activity)
	{
		TiUIEmojiText t = new TiUIEmojiText(this, true);
		t.tv.setEmojiconSize(m_fontsize);
		return t;
	}
	
	@Override
	public void handleCreationDict(KrollDict options)
	{
		super.handleCreationDict(options);

		if (options.containsKey("font") && options.getKrollDict("font").containsKey("fontSize")){
			int fontSize = options.getKrollDict("font").getInt("fontSize");
			m_fontsize = fontSize;
		}
	}
	
	@Kroll.method
	public void setSelection(int start, int stop)
	{
		TiUIEmojiText v = (TiUIEmojiText)getOrCreateView();
		if (v != null) {
			if (TiApplication.isUIThread()) {
				((TiUIEmojiText)v).setSelection(start, stop);
				return;
			}
			KrollDict args = new KrollDict();
			args.put(TiC.PROPERTY_START, start);
			args.put(TiC.PROPERTY_STOP, stop);
			getMainHandler().obtainMessage(MSG_SET_SELECTION, args).sendToTarget();
		}
	}
	
	public boolean handleMessage(Message msg)
	{
		switch (msg.what) {
			case MSG_SET_SELECTION: {
				TiUIEmojiText v = (TiUIEmojiText)getOrCreateView();
				if (v != null) {
					Object argsObj = msg.obj;
					if (argsObj instanceof KrollDict) {
						KrollDict args = (KrollDict) argsObj;
						v.setSelection(args.getInt(TiC.PROPERTY_START), args.getInt(TiC.PROPERTY_STOP));
					}
				}
				return true;
			}

			default: {
				return super.handleMessage(msg);
			}
		}
	}
}